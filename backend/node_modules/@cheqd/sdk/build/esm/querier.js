import { QueryClient } from '@cosmjs/stargate';
import { connectComet } from '@cosmjs/tendermint-rpc';
export class CheqdQuerier extends QueryClient {
    constructor(cometClient) {
        super(cometClient);
    }
    static async getConsensusParameters(url) {
        // connect to comet rpc
        const cometClient = await connectComet(url);
        // get block results
        const result = await cometClient.blockResults();
        // disconnect comet client
        cometClient.disconnect();
        // return consensus parameters
        return result.consensusUpdates;
    }
    static async connect(url) {
        const cometClient = await connectComet(url);
        return new CheqdQuerier(cometClient);
    }
    static async fromClient(client) {
        return new CheqdQuerier(client);
    }
    static async connectWithExtension(url, extension) {
        const cometClient = await connectComet(url);
        return CheqdQuerier.withExtensions(cometClient, extension);
    }
    static async connectWithExtensions(url, ...extensions) {
        if (extensions.length === 1)
            return CheqdQuerier.connectWithExtension(url, extensions[0]);
        const cometClient = await connectComet(url);
        const tupleLike = extensions;
        return CheqdQuerier.withExtensions(cometClient, ...tupleLike);
    }
}
//# sourceMappingURL=querier.js.map